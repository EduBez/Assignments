#include "HemAnaGen.hpp"

using namespace std;
using namespace veus;

//
//  Automated Hematology Analyzer pseudo random generator
//

void HemAnaGen::Generate()
{
    // Creates the file that will hold the RDW sequence
    ofstream hag{file_, ios_base::trunc};

    // Integer random number generator
    random_device rnd{}; // Produces non-deterministic random numbers

    // Random number engine based on 'Mersenne Twister' algorithm
    mt19937 gen{rnd()};

    // Produces random integer values, uniformly distributed
    uniform_int_distribution<size_t> dist{0, alfanum_.length() - 1};

    // Don't allow duplicates on the same sequence
    set<string> coll{};

    while (coll.size() < pool_)
    {
        string value{};
        // Assigns values generated by the given lambda
        generate_n(back_inserter(value), length_, [&](){return alfanum_[dist(gen)];});

        // Will not insert a duplicate value
        coll.insert(value);
    }

    for (const auto& indices : coll) {
        // Write generated sequence values
        hag << indices << '\r';
    }
    // Terminate the sequence with a new line
    hag << '\n';

    // Attempt to increase the quality of randomization
    this_thread::sleep_for(chrono::milliseconds(100));
}
